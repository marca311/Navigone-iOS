//
//  navigoInterpreter.h
//  Winnipeg Transit
//
//  Created by Marcus Dyck on 12-03-07.
//  Copyright (c) 2012 marca311. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "XMLParser.h"
#import "MSUtilities.h"

@interface navigoInterpreter : NSObject

+(NSData *)getXMLFileForSearchedItem:(NSString *)query;

+(BOOL)queryIsError:(NSData *)dataFile;

+(NSString *)replaceInvalidCharacters:(NSString *)theString;

+(NSArray *)getAddressInfoFromQuery:(NSString *)query;

+(NSString *)getAddressKeyFromElement:(TBXMLElement *)theElement;

+(NSString *)getAddressNameFromElement:(TBXMLElement *)theElement;

+(NSArray *)getQuerySuggestions:(NSString *)query;

+(BOOL)entryIsBlank:(NSString *)stringToCheck;

+(NSString *)serverModeString:(NSString *)humanModeString;

+(NSString *)stringForBool:(BOOL)theBool;

+(NSString *)timeFormatForServer:(NSDate *)timeObject;

+(NSString *)dateFormatForServer:(NSDate *)timeObject;

+(NSData *)getXMLFileFromResults:(NSArray *)queryArray;

#pragma mark - Analyzing the result XMLFile

+(TBXMLElement *)getRootElement:(NSData *)xmlFile;

+(NSString *)getRouteData:(NSData *)xmlFile;

+(NSString *)saveToFile:(NSDictionary *)dictionary;

+(NSMutableDictionary *)getPrimaryResults:(TBXMLElement *)rootElement;

+(NSString *)getNumberOfPlans:(TBXMLElement *)rootElement;

+(NSString *)getEasyAccess:(TBXMLElement *)rootElement;

+(NSDate *)getStartTime:(TBXMLElement *)rootElement;

+(NSDate *)getEndTime:(TBXMLElement *)rootElement;

+(NSString *)getTotalTime:(TBXMLElement *)rootElement;

+(NSString *)getWalkTime:(TBXMLElement *)rootElement;

+(NSString *)getRideTime:(TBXMLElement *)rootElement;
 
+(NSString *)getWaitTime:(TBXMLElement *)rootElement;

+(NSString *)getListOfBuses:(TBXMLElement *)rootElement;

+(NSString *)getOrigin:(TBXMLElement *)rootElement;

+(NSString *)getDestination:(TBXMLElement *)rootElement;

#pragma mark - Get plan details

+(NSMutableDictionary *)getPlanDetails:(NSString *)planNumber :(TBXMLElement *)rootElement;

+(NSString *)getNumberOfSegments:(TBXMLElement *)rootElement;

#pragma mark - Get segment details

+(NSMutableDictionary *)getSegmentDetails:(int)segementNumber :(TBXMLElement *)rootElement;

+(NSString *)getSegmentType:(TBXMLElement *)rootElement;

+(NSMutableDictionary *)getSegmentLocationInfo:(NSString *)segmentType :(TBXMLElement *)rootElement;
+(NSString *)getInstructionType:(TBXMLElement *)rootElement;

+(NSMutableDictionary *)getRideInfo:(TBXMLElement *)rootElement;

+(NSString *)getBusNumber:(NSString *)variantNumber;

+(NSString *)getVariantName:(TBXMLElement *)theElement;

+(NSString *)getSegmentCoordinates:(TBXMLElement *)rootElement;

# pragma mark - Get Segment Address Details

+(NSMutableDictionary *)getOriginData:(TBXMLElement *)rootElement;

+(NSMutableDictionary *)getDestinationData:(TBXMLElement *)rootElement;

+(NSMutableDictionary *)getMonumentDetails:(TBXMLElement *)rootElement;

+(NSMutableDictionary *)getStopDetails:(TBXMLElement *)rootElement;

+(NSMutableDictionary *)getAddressDetails:(TBXMLElement *)rootElement;

+(NSMutableDictionary *)getIntersectionDetails:(TBXMLElement *)rootElement;

+(NSMutableDictionary *)getPointDetails:(TBXMLElement *)rootElement;

#pragma mark - Produce Human Readable Results

+(NSMutableArray *)makeHumanReadableResults:(NSDictionary *)dictionary;

+(NSMutableArray *)humanReadableWalk:(NSDictionary *)dictionary;

+(NSMutableArray *)humanReadableRide:(NSDictionary *)dictionary;

+(NSMutableArray *)humanReadableTransfer:(NSDictionary *)dictionary;

+(NSMutableArray *)patternInterpreter:(NSDictionary *)dictionary;

+(NSString *)timeAdder:(NSDate *)date;

+(NSMutableArray *)toFromInterpreter:(NSDictionary *)dictionary;

+(NSMutableArray *)pointHInterpreter:(NSDictionary *)dictionary Time:(NSString *)time;

+(NSMutableArray *)addressHInterpreter:(NSDictionary *)dictionary Time:(NSString *)time;

+(NSMutableArray *)monumentHInterpreter:(NSDictionary *)dictionary Time:(NSString *)time;

+(NSMutableArray *)stopHInterpreter:(NSDictionary *)dictionary Time:(NSString *)time;

+(NSMutableArray *)planListMaker:(NSDictionary *)dictionary;

# pragma mark - Error Processing

+(void)displayConnectionError;

+(void)displayDataError;

+(void)displayNoConnectionError;

@end
